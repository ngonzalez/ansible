# admin
---
# apt dependencies
- name: Install system packages
  tags: admin
  apt:
    name:
    - curl
    - dnsutils
    - htop
    - iputils-ping
    - jq
    - net-tools

# github
- name: Add github to known_hosts
  tags: admin
  become_user: "{{ ansible_user }}"
  lineinfile:
    line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
    dest: "/home/{{ ansible_user }}/.ssh/known_hosts"
    mode: 0644
    owner: "{{ ansible_user }}"
    create: True

# git checkout
- name: Checkout admin repository
  tags: admin
  become_user: "{{ ansible_user }}"
  git:
    repo: "{{ admin_repository }}"
    dest: "{{ admin_path }}"
    version: main

# namespace
- name: Create k8s namespace
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f namespace/k8s.yaml

# kube-dns
- name: Set kube-dns service external IP
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n kube-system patch svc kube-dns -p '{"spec":{"externalIPs":["{{ apiserver_advertise_address }}"]}}'

# coredns
- name: Add config for coredns
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f configmap/coredns.yaml

# persistent volumes
- name: Create data folder
  tags: admin
  ansible.builtin.file:
    path: /data
    state: directory
    mode: 0755

- name: Change data folder ownership and permissions
  tags: admin
  file:
    path: /data
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    recurse: yes
  no_log: True

- name: Create storage class
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f storage/storage-class.yaml

- name: Create persistent volume
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f storage/persistent-volume.yaml

- name: Create persistent volume claim
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f storage/persistent-volume-claim.yaml

# database
- name: Create database Deployment
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f deploy/database.yaml

- name: Create database loadbalancer
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f service/database.yaml

- name: Set database loadbalancer external IP
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n k8s patch svc database-loadbalancer -p '{"spec":{"externalIPs":["{{ apiserver_advertise_address }}"]}}'

# app
- name: Create app Deployment
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f deploy/app.yaml

- name: Create app loadbalancer
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f service/app.yaml

- name: Set app loadbalancer external IP
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n k8s patch svc app-loadbalancer -p '{"spec":{"externalIPs":["{{ apiserver_advertise_address }}"]}}'
