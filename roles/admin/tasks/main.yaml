---
# git
- name: Add github to known_hosts
  tags: admin
  lineinfile:
    line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
    dest: "/home/{{ ansible_user }}/.ssh/known_hosts"
    mode: 0644
    owner: "{{ ansible_user }}"
    create: True

- name: Checkout admin repository
  tags: admin
  become_user: "{{ ansible_user }}"
  git:
    repo: "{{ admin_repository }}"
    dest: "{{ admin_path }}"
    version: dev

# dns
- name: Set kube-dns service external IP
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n kube-system patch svc kube-dns -p '{"spec":{"externalIPs":["{{ apiserver_advertise_address }}"]}}'

- name: Add config for coredns
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f configmap/coredns.yaml

# service-account
- name: Setup Service Account Admin User
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f service-account/admin-user.yaml

- name: Setup Service Account Cluster Admin
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f service-account/cluster-admin.yaml

- name: Generate Service Account Token
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n kubernetes-dashboard create token admin-user

# development: namespace
- name: Create namespace
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f namespace/development.yaml

# development: demodb
- name: Create demodb deployment
  tags: admin db
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f deploy/demodb.yaml

- name: Create demodb loadbalancer
  tags: admin db
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f service/demodb.yaml

- name: Set demodb loadbalancer external IP
  tags: admin db
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development patch svc demodb-loadbalancer -p '{"spec":{"externalIPs":["{{ apiserver_advertise_address }}"]}}'

# development: demoredis
- name: Create demoredis deployment
  tags: admin redis
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f deploy/demoredis.yaml

- name: Create demoredis loadbalancer
  tags: admin redis
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f service/demoredis.yaml

- name: Set demoredis loadbalancer external IP
  tags: admin redis
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development patch svc demoredis-loadbalancer -p '{"spec":{"externalIPs":["{{ apiserver_advertise_address }}"]}}'

# development: demoappbackend
- name: Create environment configuration for development
  tags: admin app
  template:
    src: env.dev.j2
    dest: /tmp/.env
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644

- name: Create env secret
  tags: admin app
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl create secret generic demoappbackend-env --namespace=development --from-file=/tmp/.env --dry-run=client -o yaml | kubectl -n development apply -f -

- name: Create demoappbackend Deployment
  tags: admin app
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f deploy/demoappbackend.yaml

- name: Create demoappbackend loadbalancer
  tags: admin app
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f service/demoappbackend.yaml

- name: Set demoappbackend loadbalancer external IP
  tags: admin app
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development patch svc demoappbackend-loadbalancer -p '{"spec":{"externalIPs":["{{ apiserver_advertise_address }}"]}}'

# development: demonginxbackend
- name: Create demonginxbackend deployment
  tags: admin nginx
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f deploy/demonginxbackend.yaml

- name: Create demonginxbackend loadbalancer
  tags: admin nginx
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f service/demonginxbackend.yaml

- name: Set demonginxbackend loadbalancer external IP
  tags: admin nginx
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development patch svc demonginxbackend-loadbalancer -p '{"spec":{"externalIPs":["{{ apiserver_advertise_address }}"]}}'

# development: demoappstream
- name: Create env secret
  tags: admin stream
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl create secret generic demoappstream-env --namespace=development --from-file=/tmp/.env --dry-run=client -o yaml | kubectl -n development apply -f -

- name: Create demoappstream Deployment
  tags: admin stream
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f deploy/demoappstream.yaml

- name: Create demoappstream loadbalancer
  tags: admin stream
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f service/demoappstream.yaml

- name: Set demoappstream loadbalancer external IP
  tags: admin stream
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development patch svc demoappstream-loadbalancer -p '{"spec":{"externalIPs":["{{ apiserver_advertise_address }}"]}}'
