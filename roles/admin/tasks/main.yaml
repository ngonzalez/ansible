---
# vault
- name: Include vars from vault
  tags: admin
  include_vars: env_vault.yaml
  no_log: True

# git
- name: Add github to known_hosts
  tags: admin
  lineinfile:
    line: "{{ lookup('pipe', 'ssh-keyscan -t rsa github.com') }}"
    dest: "/home/{{ ansible_user }}/.ssh/known_hosts"
    mode: 0644
    owner: "{{ ansible_user }}"
    create: True

- name: Checkout admin repository
  tags: admin
  become_user: "{{ ansible_user }}"
  git:
    repo: "{{ admin_repository }}"
    dest: "{{ admin_path }}"
    version: dev

# development: namespace
- name: Create namespace
  tags: admin
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl apply -f namespace/development.yaml

# development: postgresql
- name: Create postgresql deployment
  tags: admin postgresql
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f deploy/postgresql.yaml

- name: Create postgresql loadbalancer
  tags: admin postgresql
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f service/postgresql.yaml

- name: Set postgresql loadbalancer external IP
  tags: admin postgresql
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development patch svc postgresql-loadbalancer -p '{"spec":{"externalIPs":["{{ apiserver_advertise_address }}"]}}'

# development: redis
- name: Create redis deployment
  tags: admin redis
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f deploy/redis.yaml

- name: Create redis loadbalancer
  tags: admin redis
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f service/redis.yaml

- name: Set redis loadbalancer external IP
  tags: admin redis
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development patch svc redis-loadbalancer -p '{"spec":{"externalIPs":["{{ apiserver_advertise_address }}"]}}'

# development: app-backend
- name: Create app-backend environment configuration
  tags: admin app-backend
  template:
    src: app-backend.env.j2
    dest: /tmp/.env
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644
  no_log: True

- name: Create app-backend env secret
  tags: admin app-backend
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl create secret generic app-backend-env --namespace=development --from-file=/tmp/.env --dry-run=client -o yaml | kubectl -n development apply -f -

- name: Create app-backend Deployment
  tags: admin app-backend
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f deploy/app-backend.yaml

- name: Create app-backend loadbalancer
  tags: admin app-backend
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f service/app-backend.yaml

- name: Set app-backend loadbalancer external IP
  tags: admin app-backend
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development patch svc app-backend-loadbalancer -p '{"spec":{"externalIPs":["{{ apiserver_advertise_address }}"]}}'

# development: nginx-backend
- name: Create nginx-backend deployment
  tags: admin nginx-backend
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f deploy/nginx-backend.yaml

- name: Create nginx-backend loadbalancer
  tags: admin nginx-backend
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f service/nginx-backend.yaml

- name: Set nginx-backend loadbalancer external IP
  tags: admin nginx-backend
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development patch svc nginx-backend-loadbalancer -p '{"spec":{"externalIPs":["{{ apiserver_advertise_address }}"]}}'

# development: app-stream
- name: Create app-stream environment configuration
  tags: admin app-stream
  template:
    src: app-stream.env.j2
    dest: /tmp/.env
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0644
  no_log: True

- name: Create app-stream env secret
  tags: admin app-stream
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl create secret generic app-stream-env --namespace=development --from-file=/tmp/.env --dry-run=client -o yaml | kubectl -n development apply -f -

- name: Create app-stream deployment
  tags: admin app-stream
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f deploy/app-stream.yaml

- name: Create app-stream loadbalancer
  tags: admin app-stream
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f service/app-stream.yaml

- name: Set app-stream loadbalancer external IP
  tags: admin app-stream
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development patch svc app-stream-loadbalancer -p '{"spec":{"externalIPs":["{{ apiserver_advertise_address }}"]}}'

# development: nginx-stream
- name: Create nginx-stream Deployment
  tags: admin nginx-stream
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f deploy/nginx-stream.yaml

- name: Create nginx-stream loadbalancer
  tags: admin nginx-stream
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f service/nginx-stream.yaml

- name: Set nginx-stream loadbalancer external IP
  tags: admin nginx-stream
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development patch svc nginx-stream-loadbalancer -p '{"spec":{"externalIPs":["{{ apiserver_advertise_address }}"]}}'

# development: nginx-frontend
- name: Create nginx-frontend Deployment
  tags: admin nginx-frontend
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f deploy/nginx-frontend.yaml

- name: Create nginx-frontend loadbalancer
  tags: admin nginx-frontend
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development replace --force -f service/nginx-frontend.yaml

- name: Set nginx-frontend loadbalancer external IP
  tags: admin nginx-frontend
  become_user: "{{ ansible_user }}"
  shell:
    chdir: "{{ admin_path }}"
    cmd: kubectl -n development patch svc nginx-frontend-loadbalancer -p '{"spec":{"externalIPs":["{{ apiserver_advertise_address }}"]}}'
