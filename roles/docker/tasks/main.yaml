# docker
---
- name: Check if docker is installed
  tags: docker
  command: docker --version
  register: dockerversion
  no_log: True

- name: Install apt dependencies
  tags: docker
  apt:
    name:
      - gpg
      - gpg-agent
  when: dockerversion.stdout|int == 1

- name: Add docker apt key
  tags: docker
  shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor --yes -o /usr/share/keyrings/docker.gpg
  when: dockerversion.stdout|int == 1

- name: Add docker apt repository
  tags: docker
  shell: echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list
  when: dockerversion.stdout|int == 1

- name: Run the equivalent of "apt-get update" as a separate step
  apt:
    update_cache: yes
  when: dockerversion.stdout|int == 1

- name: Install docker
  tags: docker
  apt:
    name:
    - docker-ce
    - docker-ce-cli
    - containerd.io
  when: dockerversion.stdout|int == 1

- name: Add user to docker group
  tags: docker
  user:
    name: "{{ ansible_user }}"
    group: docker
  when: dockerversion.stdout|int == 1

- name: Remove swapfile from /etc/fstab
  tags: docker
  mount:
    name: "{{ item }}"
    fstype: swap
    state: absent
  with_items:
    - swap
    - none
  when: dockerversion.stdout|int == 1

- name: Disable swap
  tags: docker
  command: swapoff -a
  when: ansible_swaptotal_mb > 0
  when: dockerversion.stdout|int == 1

- name: Configure docker daemon
  tags: docker
  lineinfile:
    path: /etc/docker/daemon.json
    line: "{ \"exec-opts\": [\"native.cgroupdriver=systemd\"] }"
    create: yes
  when: dockerversion.stdout|int == 1

- name: Start docker
  tags: docker
  service:
    name: docker
    state: restarted
    daemon_reload: yes
  when: dockerversion.stdout|int == 1
