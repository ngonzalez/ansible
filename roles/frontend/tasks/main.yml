---
# application dependencies
- name: Remove old yarn packages
  apt:
    name:
      - cmdtest
      - yarn
    state: absent

- name: Install application dependencies
  apt:
    name:
      - gpg
      - gpg-agent

- name: Add yarn apt key
  apt_key:
    url: https://dl.yarnpkg.com/debian/pubkey.gpg
    state: present

- name: Add yarn apt repository
  apt_repository:
    repo: "deb https://dl.yarnpkg.com/debian/ stable main"
    state: present
    update_cache: yes

- name: Install yarn
  apt:
    pkg: yarn
    state: latest

# app folder
- name: Remove application directory
  file:
    path: "{{ app_tmp_path }}"
    state: absent

- name: Create application temporary directory
  file:
    path: "{{ app_tmp_path }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755

# git
- name: Clone application repository
  become_user: "{{ ansible_user }}"
  git:
    repo: "{{ app_repository }}"
    dest: "{{ app_tmp_path }}"

# yarn cache clean
- name: yarn cache clean
  become_user: "{{ ansible_user }}"
  command: yarn cache clean
  args:
    chdir: "{{ app_tmp_path }}"

# yarn install
- name: yarn install
  become_user: "{{ ansible_user }}"
  command: yarn install
  args:
    chdir: "{{ app_tmp_path }}"

# yarn run build
- name: yarn run build
  become_user: "{{ ansible_user }}"
  command: yarn run build
  args:
    chdir: "{{ app_tmp_path }}"

# link to application
- name: Create application directory
  file:
    path: /var/www
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755

- name: Remove application directory
  file:
    path: "{{ app_path }}"
    state: absent

- name: Move to application folder
  command: mv -f "{{ app_tmp_path }}" "{{ app_path }}"
