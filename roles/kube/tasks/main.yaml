# kubernetes
---
- name: Upgrade the OS (apt-get dist-upgrade)
  tags: kubernetes
  apt:
    upgrade: dist

# Container Runtime Interface
- name: Install apt dependencies
  tags: kubernetes
  apt:
    name:
      - gpg
      - gpg-agent

- name: Download CRIO-O gpg key
  tags: kubernetes
  shell: curl -fsSL https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/Release.key | gpg --dearmor --yes -o /usr/share/keyrings/libcontainers-archive-keyring.gpg
  environment:
    - OS: xUbuntu_22.04

- name: Add CRIO-O apt repository
  tags: kubernetes
  shell: echo "deb [signed-by=/usr/share/keyrings/libcontainers-archive-keyring.gpg] https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/$OS/ /" > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list
  environment:
    - OS: xUbuntu_22.04

- name: Download CRIO-O gpg key
  tags: kubernetes
  shell: curl -fsSL https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/Release.key | gpg --dearmor --yes -o /usr/share/keyrings/libcontainers-crio-archive-keyring.gpg
  environment:
    - OS: xUbuntu_22.04
    - VERSION: 1.25

- name: Add CRIO-O apt repository
  tags: kubernetes
  shell: echo "deb [signed-by=/usr/share/keyrings/libcontainers-crio-archive-keyring.gpg] https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable:/cri-o:/$VERSION/$OS/ /" > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable:cri-o:$VERSION.list
  environment:
    - OS: xUbuntu_22.04
    - VERSION: 1.25

- name: Run the equivalent of "apt-get update" as a separate step
  tags: kubernetes
  apt:
    update_cache: yes

- name: Install CRI-O
  tags: kubernetes
  apt:
    name:
    - cri-o
    - cri-o-runc

- name: Add cgroup config
  tags: kubernetes
  template:
    src: cgroup-manager.conf.j2
    dest: /etc/crio/crio.conf.d/10-cgroup-manager.conf

- name: Start CRI-O
  tags: kubernetes
  service:
    name: crio
    state: restarted
    daemon_reload: yes

# Kubernetes
- name: Add an apt signing key for Kubernetes
  tags: kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Adding apt repository for Kubernetes
  tags: kubernetes
  apt_repository:
    repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
    state: present
    filename: kubernetes.list

- name: Install Kubernetes binaries
  tags: kubernetes
  apt:
    name:
    - kubelet
    - kubeadm
    - kubectl

- name: Reset Kubernetes cluster
  tags: kubernetes
  command: kubeadm reset -f --cri-socket {{ cri_socket }}

- name: Pull images
  tags: kubernetes
  command: kubeadm config images pull --cri-socket {{ cri_socket }}

- name: Initialize the Kubernetes cluster
  tags: kubernetes
  command: kubeadm init --apiserver-advertise-address {{ apiserver_advertise_address }} \
                        --apiserver-cert-extra-sans {{ apiserver_advertise_address }} \
                        --cri-socket {{ cri_socket }} \
                        --pod-network-cidr {{ pod_network_cidr }} \
                        --node-name {{ node_name }}

- name: Create .kube folder
  tags: kubernetes
  file:
    path: "/home/{{ ansible_user }}/.kube"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755

- name: Copy file with owner and permissions
  tags: kubernetes
  copy:
    src: /etc/kubernetes/admin.conf
    dest: "/home/{{ ansible_user }}/.kube/config"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0400
    remote_src: True

- name: Taint node as control plane
  tags: kubernetes
  command: kubectl taint nodes --all node-role.kubernetes.io/control-plane-
  become: false

# helm
- name: Install Helm
  tags: kubernetes
  shell:
    cmd: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

# tigera-operator
- name: Add Calico Repository
  tags: kubernetes
  become_user: "{{ ansible_user }}"
  shell:
    cmd: helm repo add projectcalico https://projectcalico.docs.tigera.io/charts

- name: Create Tigera Operator Namespace
  tags: kubernetes
  become_user: "{{ ansible_user }}"
  shell:
    cmd: kubectl create ns tigera-operator

- name: Install Tigera Operator
  tags: kubernetes
  become_user: "{{ ansible_user }}"
  shell:
    cmd: helm upgrade --install calico projectcalico/tigera-operator --namespace tigera-operator

# calico
- name: Install Calico CNI
  tags: kubernetes
  become_user: "{{ ansible_user }}"
  shell:
    cmd: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/master/manifests/calico.yaml

- name: Install Calico Custom Resources
  tags: kubernetes
  become_user: "{{ ansible_user }}"
  shell:
    cmd: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/master/manifests/custom-resources.yaml

- name: Add Bridge Configuration
  tags: kubernetes
  become_user: "{{ ansible_user }}"
  template:
    src: crio-calico.conf.j2
    dest: /etc/cni/net.d/10-crio.conf
